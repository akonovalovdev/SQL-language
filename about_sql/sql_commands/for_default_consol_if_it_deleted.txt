--------------------DELETE-------------------------------
DELETE FROM book; --таблица;

DELETE FROM supply
WHERE author IN(
    SELECT author
    FROM book
    GROUP BY author
    HAVING SUM(amount) >10
);

--------------------CREATE-------------------------------
-- Создать таблицу заказ (ordering), куда включить авторов и названия тех книг,
-- количество экземпляров которых в таблице book меньше 4. Для всех книг указать одинаковое количество экземпляров 5.
CREATE TABLE ordering AS
SELECT author, title, 5 AS amount
FROM book
WHERE amount < 4;

-- Создать таблицу заказ (ordering), куда включить авторов и названия тех книг,
-- количество экземпляров которых в таблице book меньше 4. Для всех книг указать
-- одинаковое значение - среднее количество экземпляров книг в таблице book.

CREATE TABLE ordering AS
SELECT author, title,
       (
           SELECT ROUND(AVG(amount))
           FROM book
       ) AS amount
FROM book
WHERE amount < 4;

-- Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, количество экземпляров которых
-- в таблице book меньше среднего количества экземпляров книг в таблице book. В таблицу включить столбец   amount,
-- в котором для всех книг указать одинаковое значение - среднее количество экземпляров книг в таблице book.
CREATE TABLE ordering AS
SELECT author, title, (SELECT ROUND(AVG(amount)) FROM book) AS amount FROM book
WHERE amount < (SELECT AVG(amount) FROM book);
SELECT * FROM ordering;

SELECT * FROM ordering;

DROP TABLE ordering;

--------------------UPDATE-------------------------------
UPDATE book
SET price = 0.7 * price
WHERE price > 200;
SELECT * FROM book;


UPDATE book
SET amount = amount; -- buy,
    --buy = 0;


-------------------SELECTS-------------------------------

-- Вывести из таблицы trip информацию о командировках тех сотрудников, фамилия которых
-- заканчивается на букву «а», в отсортированном по убыванию даты последнего дня командировки виде.
-- В результат включить столбцы name, city, per_diem, date_first, date_last.
SELECT
    name,
    city,
    per_diem,
    date_first,
    date_last
FROM trip
WHERE name LIKE '%а %'
ORDER BY date_last DESC;

-- Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве.
SELECT
    name
FROM trip
WHERE city = 'Москва'
GROUP BY name
ORDER BY name;

-- Для каждого города посчитать, сколько раз сотрудники в нем были.
-- Информацию вывести в отсортированном в алфавитном порядке по названию городов.
-- Вычисляемый столбец назвать Количество.
SELECT
    city,
    COUNT(city) AS Количество
FROM trip
GROUP BY city
ORDER BY city;

SELECT *
FROM trip
ORDER BY  date_first
LIMIT 3;

SELECT
    city,
    COUNT(city) AS Количество
FROM trip
GROUP BY city
ORDER BY Количество DESC
LIMIT 2;

-- Вывести информацию о командировках сотрудника(ов), которые были самыми короткими по времени.
-- В результат включить столбцы name, city, date_first, date_last.
SELECT
    name,
    city,
    date_first,
    date_last
FROM trip
WHERE date_last - date_first = (
    SELECT
        MIN(date_last - date_first)
    FROM trip
);

SELECT
    name,
    city,
    date_first,
    date_last
FROM trip
WHERE EXTRACT(MONTH FROM date_first) = EXTRACT(MONTH FROM date_last)
ORDER BY city, name;

SELECT
          TO_CHAR(date_first, 'Month') AS Месяц,
    COUNT(EXTRACT(MONTH FROM date_first)) AS Количество
FROM trip
GROUP BY Месяц
ORDER BY Количество DESC, Месяц;

SELECT title, amount, price,
       ROUND(CASE WHEN amount < 4  THEN price*0.5 ELSE price*0.7 END, 2) AS sale
FROM book;

SELECT *,
       price * amount AS total
FROM book;

SELECT title, price
FROM book
WHERE price < 600;

SELECT
    author,
    title,
    ROUND(CASE
              WHEN author = 'Булгаков М.А.' THEN price * 1.10
              WHEN author = 'Есенин С.А.' THEN price * 1.05 ELSE price
              END ,2) AS new_price
FROM book;

SELECT author, title, price
FROM book
WHERE amount < 10;

SELECT title, author, price
FROM book
WHERE price > 600 AND author = 'Булгаков М.А.';

SELECT
    title,
    author,
    price,
    amount
FROM book
WHERE (price < 500 OR price > 600) AND price * amount >= 5000;


-- SELECT author, title,
--        ROUND(IF(author = "Булгаков М.А.", price * 1.10, IF(author = "Есенин С.А.", price * 1.05, price)),2)
--            AS new_price
-- FROM book;

DROP TABLE book;

CREATE TABLE book( -- supply (поставка)
    book_id SERIAL PRIMARY KEY,
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL(8,2),
    amount INT
);

INSERT INTO book (title, author, price, amount)
VALUES ('Мастер и Маргарита', 'Булгаков М.А.',	670.99,	3),
       ('Белая гвардия', 'Булгаков М.А.', 540.50, 5),
       ('Идиот', 'Достоевский Ф.М.', 460.00, 10),
       ('Братья Карамазовы', 'Достоевский Ф.М.', 799.01, 3),
       ('Стихотворения и поэмы',	'Есенин С.А.',	650.00,	15),
       ('', 'Иванов С.С.',	50.00,	10),
       ('Дети полуночи', 'Рушди Салман', 950.00, 5),
       ('Лирика', 'Гумилев Н.С.', 460.00, 10),
       ('Поэмы', 'Бехтерев С.С.', 460.00, 10),
       ('Капитанская дочка', 'Пушкин А.С.', 520.50, 7);

create table trip
(
    trip_id SERIAL PRIMARY KEY,
    name varchar(30),
    city varchar(25),
    per_diem decimal(8,2),
    date_first date,
    date_last date
    );

INSERT INTO trip (name,city,per_diem,date_first,date_last)
values
    ('Баранов П.Е.','Москва',700 , '2020-01-12', '2020-01-17'),
    ('Абрамова К.А.','Владивосток',450 , '2020-01-14', '2020-01-27'),
    ('Семенов И.В.','Москва',700 , '2020-01-23', '2020-01-31'),
    ('Ильиных Г.Р.','Владивосток', 450, '2020-01-12', '2020-02-02'),
    ('Колесов С.П.','Москва',700 , '2020-02-01', '2020-02-06'),
    ('Баранов П.Е.','Москва', 700, '2020-02-14', '2020-02-22'),
    ('Абрамова К.А.','Москва', 700, '2020-02-23', '2020-03-01'),
    ('Лебедев Т.К.','Москва', 700, '2020-03-03', '2020-03-06'),
    ('Колесов С.П.','Новосибирск',450 , '2020-02-27', '2020-03-12'),
    ('Семенов И.В.','Санкт-Петербург',700 , '2020-03-29', '2020-04-05'),
    ('Абрамова К.А.','Москва',700 , '2020-04-06', '2020-04-14'),
    ('Баранов П.Е.','Новосибирск',450 , '2020-04-18', '2020-05-04'),
    ('Лебедев Т.К.','Томск',450 , '2020-05-20', '2020-05-31'),
    ('Семенов И.В.','Санкт-Петербург',700 , '2020-06-01', '2020-06-03'),
    ('Абрамова К.А.','Санкт-Петербург', 700, '2020-05-28', '2020-06-04'),
    ('Федорова А.Ю.','Новосибирск',450 , '2020-05-25', '2020-06-04'),
    ('Колесов С.П.','Новосибирск', 450, '2020-06-03', '2020-06-12'),
    ('Федорова А.Ю.','Томск', 450, '2020-06-20', '2020-06-26'),
    ('Абрамова К.А.','Владивосток', 450, '2020-07-02', '2020-07-13'),
    ('Баранов П.Е.','Воронеж', 450, '2020-07-19', '2020-07-25');

SELECT * FROM trip;

DROP TABLE trip;

INSERT INTO supply (title, author, price, amount)
VALUES
    ('Лирика', 'Пастернак Б.Л.', 518.99, 2),
    ('Черный человек', 'Есенин С.А.', 570.20, 6),
    ('Белая гвардия', 'Булгаков М.А.', 540.50, 7),
    ('Идиот', 'Достоевский Ф.М.', 360.80, 3);

INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount
FROM supply;

SELECT * FROM supply;
SELECT * FROM book;

INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount
FROM supply
WHERE title NOT IN (
    SELECT title
    FROM book
);

-- INSERT INTO book (title, author, price, amount)
-- VALUES ('Капитанская дочка', 'Пушкин А.С.', 520.50, 7);
INSERT INTO book (title, author, price, amount)
VALUES ('Игрок', 'Достоевский Ф.М.', 480.50, 10),
       ('Черный человек','Есенин С.А.', Null, Null);

SELECT title, amount
FROM book
WHERE amount BETWEEN 5 AND 14;

SELECT
    ROUND(AVG(price), 2) AS Средняя_цена,
    ROUND(SUM(price*amount), 2) AS Стоимость
FROM book
WHERE amount BETWEEN 5 AND 14;

SELECT title, price
FROM book
WHERE author IN ('Булгаков М.А.', 'Достоевский Ф.М.');

SELECT
    title,
    author
FROM book
WHERE (price BETWEEN 540.50 AND 800) AND amount IN(2,3,5,7);

SELECT title, author, price
FROM book
ORDER BY title;

SELECT author, title, amount AS Количество
FROM book
WHERE price < 750
ORDER BY author, amount DESC;

SELECT
    author,
    title
FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY author DESC, title;

SELECT author,
       MIN(price) AS Минимальная_цена,
       MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(price * amount) > 5000
ORDER BY Минимальная_цена DESC;

SELECT title
FROM book
WHERE title LIKE 'Б%';
/* эквивалентное условие
title LIKE 'б%'
*/

SELECT
    title,
    author
FROM book
WHERE title LIKE '_% _%' AND(author LIKE '%С.%' OR author LIKE '%С.')
ORDER BY title;

SELECT DISTINCT amount
FROM book;

SELECT author, MIN(price) AS min_price,  count(*), MAX(price) AS max_price, AVG(price) AS СРЕДНЕЕ
FROM book
GROUP BY author;

SELECT author, sum(amount), count(amount), count(*)
FROM book
GROUP BY author;

SELECT author,
       MIN(price) AS Минимальная_цена,
       MAX(price) AS Максимальная_цена
FROM book
WHERE author <> 'Есенин С.А.'
GROUP BY author
HAVING SUM(amount) > 10;

SELECT
    author AS Автор,
        COUNT(title) AS Различных_книг,
        SUM(amount) AS Количество_экземпляров
FROM book
GROUP BY author;

SELECT SUM(amount) AS Количество,
       SUM(price * amount) AS Стоимость
FROM book;

SELECT
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена,
    ROUND(AVG(DISTINCT price),2) AS Средняя_цена
FROM book;
-- GROUP BY author;

SELECT
    author,
    SUM(price*amount) AS Стоимость
FROM book
WHERE title <> 'Идиот' AND title <> 'Белая гвардия'
GROUP BY author
HAVING SUM(price*amount) > 5000
ORDER BY Стоимость DESC;

SELECT title, author, price, amount
FROM book
WHERE price <> (
    SELECT MAX(price)
    FROM book
) AND price <> (
    SELECT MIN(price)
    FROM book
);

SELECT
    author,
    title,
    price
FROM book
WHERE price <= (
    SELECT AVG(price)
    FROM book
) ORDER BY price DESC;

SELECT title, author, amount
FROM book
WHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;

SELECT
    author,
    title,
    price
FROM book
WHERE price - (SELECT MIN(price) FROM book) <=150
ORDER BY price;

SELECT title, author, amount, price
FROM book
WHERE author IN (
    SELECT author
    FROM book
    GROUP BY author
    HAVING SUM(amount) >= 12
);

SELECT
    author,
    title,
    amount
FROM book
WHERE amount IN(
    SELECT amount
    FROM book
    GROUP BY amount
    HAVING COUNT(amount) = 1
);

SELECT title, author, amount, price
FROM book
WHERE amount < ALL (
    SELECT AVG(amount)
    FROM book
    GROUP BY author
);

SELECT title, author, amount,
       (
           SELECT AVG(amount)
           FROM book
       ) AS Среднее_количество
FROM book
WHERE abs(amount - (SELECT AVG(amount) FROM book)) >3;